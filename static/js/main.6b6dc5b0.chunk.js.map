{"version":3,"sources":["containers/MainHaikaiScreen/haikaiData.js","assets/1.jpg","assets/OpenSans-Semibold.ttf","logo.svg","assets sync nonrecursive //.(png|jpe?g|svg)$","assets/10.jpg","assets/11.jpg","assets/12.jpg","assets/13.jpg","assets/14.jpg","assets/15.jpg","assets/2.jpg","assets/3.jpg","assets/4-min.jpg","assets/5.jpg","assets/6.jpg","assets/7.jpg","assets/8.jpg","assets/9.jpg","theme.js","components/haikai/index.js","containers/MainHaikaiScreen/index.js","router.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Object","freeze","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","resolve","openSansSemiBold","fontFamily","fontStyle","fontDisplay","src","OpenSansSemiBold","customTheme","createMuiTheme","typography","body","fontSize","h1","h2","h3","h4","h5","h6","h7","body1","body2","overrides","MuiCssBaseline","palette","primary","main","cinza1","cinza2","grey","amareloCamara","verdeCamaraLight","white","useStyles","makeStyles","theme","width","height","backgroundColor","display","flexDirection","sentenceContainer","justifyContent","margin","color","alignSelf","overlay","zIndex","Haikai","props","classes","useState","data","setData","r","t_images","item","index","replace","importAll","require","images","numbersChosen","randomNumber","min","Math","ceil","max","floor","length","random","selectRandomImage","result","includes","push","useEffect","Grid","container","className","style","backgroundImage","backgroundSize","backgroundPosition","Typography","first_sentence","second_sentence","third_sentence","MainHaikaiScreen","haikai","setHaikai","setSeconds","interval","setInterval","seconds","chooseHaikai","clearInterval","haikaiData","Fade","in","timeout","AppRouter","exact","path","App","ThemeProvider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6b6dc5b0.chunk.js","sourcesContent":["module.exports = Object.freeze([\n  {\n    \"first_sentence\": \"Uma montanha com neblina\",\n    \"second_sentence\": \"Um erro ao centro\",\n    \"third_sentence\": \"Disciplina\",\n  },\n  {\n    \"first_sentence\": \"Terremoto com vento\",\n    \"second_sentence\": \"Fumaça molhada\",\n    \"third_sentence\": \"Sossego\",\n  },\n  {\n    \"first_sentence\": \"Vulcão em erupção\",\n    \"second_sentence\": \"Céu cinzento\",\n    \"third_sentence\": \"Amor\",\n  },\n  {\n    \"first_sentence\": \"Tremor no chão\",\n    \"second_sentence\": \"Ação e reação\",\n    \"third_sentence\": \"Paz\",\n  }]\n)\n","module.exports = __webpack_public_path__ + \"static/media/1.bc5aae47.jpg\";","module.exports = __webpack_public_path__ + \"static/media/OpenSans-Semibold.33f225b8.ttf\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","var map = {\n\t\"./1.jpg\": 33,\n\t\"./10.jpg\": 54,\n\t\"./11.jpg\": 55,\n\t\"./12.jpg\": 56,\n\t\"./13.jpg\": 57,\n\t\"./14.jpg\": 58,\n\t\"./15.jpg\": 59,\n\t\"./2.jpg\": 60,\n\t\"./3.jpg\": 61,\n\t\"./4-min.jpg\": 62,\n\t\"./5.jpg\": 63,\n\t\"./6.jpg\": 64,\n\t\"./7.jpg\": 65,\n\t\"./8.jpg\": 66,\n\t\"./9.jpg\": 67\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 53;","module.exports = __webpack_public_path__ + \"static/media/10.e244dbfa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/11.e15908b7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/12.2083a411.jpg\";","module.exports = __webpack_public_path__ + \"static/media/13.a8d307d0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/14.694d0239.jpg\";","module.exports = __webpack_public_path__ + \"static/media/15.fe426506.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.10ac5ae7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.e3bd770b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4-min.d0666fe3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5.b69d83cb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/6.14e894b3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/7.56bc7578.jpg\";","module.exports = __webpack_public_path__ + \"static/media/8.2b5a8fd3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/9.daf205dc.jpg\";","import { createMuiTheme } from '@material-ui/core/styles';\nimport OpenSansSemiBold from './assets/OpenSans-Semibold.ttf';\n\nconst openSansSemiBold = {\n    fontFamily: 'OpenSans',\n    fontStyle: 'normal',\n    fontDisplay: 'swap',\n    src: `\n      local('OpenSans'),\n      local('OpenSans-SemiBold'),\n      url(${OpenSansSemiBold}) format('ttf')\n    `,\n  };\n\n  export const customTheme = createMuiTheme(\n    {\n    typography: {\n      fontFamily: \"OpenSans\",\n      body:{\n        fontSize:12,\n        fontStyle: 'semibold',\n      },\n      h1:{\n        fontSize:54,\n        fontStyle: 'semibold',\n      },\n      h2:{\n        fontSize:36,\n        fontStyle: 'semibold',\n      },\n      h3:{\n        fontSize:24,\n        fontStyle: 'semibold',\n      },\n      h4:{\n        fontSize:16,\n        fontStyle: 'semibold',\n      },\n      h5:{\n        fontSize:14,\n        fontStyle: 'semibold',\n      },\n      h6:{\n        fontSize:13,\n        fontStyle: 'semibold',\n      },\n      h7:{\n        fontSize:9,\n        fontStyle: 'regular',\n      },\n      body1:{\n        fontSize:12,\n        fontStyle: 'regular'\n      },\n      body2:{\n        fontSize:9,\n        fontStyle: 'semibold',\n      }\n    },\n    overrides: {\n      MuiCssBaseline: {\n        '@global': {\n          '@font-face': [openSansSemiBold],\n        },\n      },\n    },\n    palette: {\n      primary: {\n        main: '#007E5A',\n      },\n      cinza1: {\n        main: '#F2F2F2',\n      },\n      cinza2: {\n        main: '#C4C4C4',\n      },\n      grey: {\n        main: '#666666',\n      },\n      amareloCamara: {\n        main: '#FAC915',\n      },\n      verdeCamaraLight: {\n        main: '#00AF82',\n      },\n      white: {\n        main: '#FFF',\n      }\n    },\n  });\n","import React, {useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography } from '@material-ui/core';\nimport Photo1 from './../../assets/1.jpg';\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'white',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  sentenceContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    height: '25vh',\n    width: '100%',\n    margin: '0 0 2rem 0',\n  },\n  typography: {\n    color: 'white',\n    fontSize: 'x-large',\n    fontFamily: \"EB Garamond, serif\",\n    alignSelf: 'center',\n  },\n  overlay: {\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    zIndex: '2',\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n  },\n}));\n\nexport default function Haikai(props){\n  const classes = useStyles();\n  const [data, setData] = useState({...props.data});\n  const [images, setImages] = useState(importAll(require.context('./../../assets/', false, /\\.(png|jpe?g|svg)$/)));\n  const [selectedNumbers, setSelectedNumbers] = useState([]);\n  let   numbersChosen = []\n\n  useEffect(() => {\n    setData(props.data);\n  }, [props.data])\n\n  function importAll(r) {\n    let t_images = {}\n    r.keys().map((item, index) => { t_images[item.replace('./', '')] = r(item); });\n    return t_images\n  }\n\n  function randomNumber() {\n    let min = Math.ceil(1);\n    let max = Math.floor(Object.keys(images).length);\n    let selected = Math.floor(Math.random() * (max - min)) + min;\n    return selected;\n  }\n\n  function selectRandomImage() {\n    let result = randomNumber()\n    while (numbersChosen.includes(result)){\n      result = randomNumber()\n    }\n    numbersChosen.push(result)\n    return result + '.jpg';\n  }\n\n\treturn (\n    <Grid container className={classes.body}>\n      <Grid item\n            className={classes.sentenceContainer}\n            style={{\n                    backgroundImage: `url(${images[selectRandomImage()]})`,\n                    backgroundSize: '100%',\n                    backgroundPosition: 'center'}}>\n                    <div className={classes.overlay}>\n                      <Typography className={classes.typography}>{data.first_sentence} </Typography>\n                    </div>\n      </Grid>\n      <Grid item\n            className={classes.sentenceContainer}\n            style={{backgroundImage: `url(${images[selectRandomImage()]})`,\n                    backgroundSize: '100%',\n                    backgroundPosition: 'center'}}>\n            <div className={classes.overlay}>\n              <Typography className={classes.typography}>{data.second_sentence} </Typography>\n            </div>\n      </Grid>\n      <Grid item\n            className={classes.sentenceContainer}\n            style={{backgroundImage: `url(${images[selectRandomImage()]})`,\n                    backgroundSize: '100%',\n                    backgroundPosition: 'center'}}>\n                    <div className={classes.overlay}>\n                      <Typography className={classes.typography}>{data.third_sentence} </Typography>\n                    </div>\n      </Grid>\n    </Grid>\n\t)\n}\n","import React, {useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Fade, Grid } from '@material-ui/core';\nimport haikaiData from './haikaiData';\nimport Haikai from './../../components/haikai';\nconst useStyles = makeStyles({\n  body: {\n    height: '100vh',\n    display: 'flex'\n  },\n  container: {\n    margin: '2% 10%',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    backgroundColor: 'red',\n    height: '100%',\n  },\n});\n\nexport default function MainHaikaiScreen() {\n  const classes = useStyles();\n  const [haikai, setHaikai] = useState(0)\n  const [seconds, setSeconds] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setSeconds(seconds => seconds + 1);\n      setHaikai(chooseHaikai())\n    }, 8000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const chooseHaikai = () => {\n    const max = haikaiData.length - 1;\n    const min = 0\n    let selected = Math.floor(Math.random() * (max - min)) + min;\n    return selected\n  };\n\n  return (\n    <>\n      <Fade in timeout={3000}>\n        <div className={classes.body}>\n          <Grid container className={classes.container}>\n            <Haikai data={haikaiData[haikai]} />\n          </Grid>\n        </div>\n      </Fade>\n    </>\n  )\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Redirect} from \"react-router-dom\";\nimport MainHaikaiScreen from './containers/MainHaikaiScreen';\n\nexport default function AppRouter(props){\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/visualHaiku\">\n          <MainHaikaiScreen theme={props.theme}></MainHaikaiScreen>\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {ThemeProvider } from '@material-ui/core/styles';\nimport {customTheme} from './theme';\nimport AppRouter from './router';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={customTheme}>\n        <AppRouter theme={customTheme}></AppRouter>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}